/*
 * This file is part of BenchExec, a framework for reliable benchmarking:
 * https://github.com/sosy-lab/benchexec
 *
 * SPDX-FileCopyrightText: 2019-2020 Dirk Beyer <https://www.sosy-lab.org>
 *
 * SPDX-License-Identifier: Apache-2.0
 */

body {
  overflow-x: hidden;
}

// Tooltip styles
.infoTooltip {
  visibility: hidden;
  width: 250px;
  text-align: center;
  border-radius: 6px;
  padding: 5px;
  position: absolute;
  z-index: 200;
  left: 150%;
  top: 50%;
  transform: translateY(-50%);
  margin-left: 10px;
  opacity: 0;
  transition: opacity 0.3s;
  background-color: #f9f9f9;
  color: black;
  font-size: 12px;
  font-weight: lighter;
}

.infoTooltipContainer {
  position: relative;
  display: inline-block;
}

.infoTooltipIcon {
  cursor: pointer;
}

.App {
  // text-align: center;
  font-family: "Droid Sans", "Liberation Sans", Ubuntu, "Trebuchet MS", Tahoma,
    Arial, Verdana, sans-serif;
}
// $key-color: #009440;
$key-color: #71bcff;
$border-color: rgb(173, 173, 173);
$hover-color: darken(white, 20%);

//------------------common------------------
.footer {
  display: flex;
  justify-content: center;
  align-items: center;
}

.correct {
  color: green;
}
.error {
  color: magenta;
}
.unknown,
.correct-unconfirmed {
  color: $key-color;
}
.wrong {
  color: red;
}

.link {
  text-decoration: underline;
  color: $key-color;
  cursor: pointer;
}
.btn {
  margin: 0 10px 9px 0;
  text-align: center;
  height: 35px;
  cursor: pointer;

  //background-image: linear-gradient(to left, $key-color, white);
  box-shadow: 0 4px 12px 0 rgba($key-color, 0.2);
  -o-transition: all 0.4s ease-in-out;
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
  background-size: 300% 100%;

  &:hover {
    // background-position: 100% 0;
    // -o-transition: all .4s ease-in-out;
    // -webkit-transition: all .4s ease-in-out;
    // transition: all .4s ease-in-out;
    background: $key-color;
  }

  &:disabled {
    background: darkgrey;
    cursor: default;
    &:hover {
      background: darkgrey;
    }
  }
}
.btn-apply {
  margin-left: 100px;
  background: $key-color;
  &:hover {
    background: white;
  }
}

.header__tool-infos {
  font-weight: 700;
}

.table {
  white-space: nowrap;
  .table-container {
    min-width: fit-content !important;
  }
  .table-content {
    overflow: auto;
  }
  &.sticky {
    .td,
    .th {
      background: #fff;
    }

    .header {
      position: sticky;
      width: fit-content;
      text-align: center;
    }

    .body {
      position: relative;
      z-index: 0;
    }

    [data-sticky-td] {
      position: sticky;
    }

    [data-sticky-last-left-td] {
      border-right: 1px solid #ccc;
    }

    [data-sticky-first-right-td] {
      border-left: 1px solid #ccc;
    }
  }

  .table-header {
    .th.outer {
      background-color: #f7f7f7;
    }

    .clickable {
      // to avoid padding when column is too narrow
      display: flex;
      justify-content: center;

      &:hover {
        background-color: $hover-color;
        cursor: pointer;
      }
    }
  }

  .td,
  .th {
    overflow: hidden;
  }

  .resizer {
    display: inline-block;
    position: absolute;
    width: 36px;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 2;
    transform: translateX(50%);
    background-color: rgba(0, 0, 0, 0) !important;

    &.isResizing {
      background: red;
    }
  }

  .separator {
    margin: 0 !important;
    padding: 0 !important;
    background: $border-color !important;
    max-width: 2px;
  }
}

//------------------overview------------------
$content-height: calc(100vh - 43px); // height of .menu sums up to 43px

.overview {
  background: white;

  .filterBox {
    display: flex;
    flex-direction: column;
    position: absolute;
    right: 0;
    height: 100vh;
    z-index: 9998;
    max-width: max-content;
    min-width: min-content;
    width: 40vw;
    background-color: white;
    box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.15);
    transition: all 0.5s ease-in-out;
    .filter-card {
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      width: 100%;
      box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.15);
      margin-top: 18px;
      &--container {
        overflow-y: scroll;
        margin-bottom: 8px;
        /*
        &::-webkit-scrollbar {
          display: none;
        }
        -ms-overflow-style: none;
        scrollbar-width: none; */
      }
      &--body {
        text-align: left;
        margin-left: 25px;
        margin-right: 25px;
        list-style: none;
        display: flex;
        flex-direction: column;
        margin-top: 10px;
        margin-bottom: 10px;
        &--list {
          list-style: none;
        }
        &--empty-rows {
          margin-bottom: 1em;
        }
        .task-id-filters {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          align-items: center;
          input {
            margin-bottom: 15px;
          }
        }
      }
      &--range {
        &-container {
          display: flex;
          justify-content: space-between;
        }
        &-input-fields {
          display: grid;
          grid-gap: 1rem;

          input {
            width: 93%;
          }

          .range-input-fields--min {
            grid-column-start: 1;
            grid-column-end: 2;
          }
          .range-input-fields--max {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
      }
      &--header {
        min-height: 35px;
        width: 100%;
        display: flex;
        position: relative;
        align-items: center;
        background-color: #b8ddff;
        .filter-selection {
          margin-left: 25px;
        }
        .check-button {
          margin-left: 15px;
          color: green;
        }
        .delete-button {
          position: absolute;
          right: 12px;
          cursor: pointer;
        }
        .title {
          margin: 0;
          margin-left: 25px;
          font-size: 18px;
          padding: 3px;
        }
      }
    }
    &--hidden {
      right: -100vw;
    }
    &--header {
      height: 35px;
      background-color: #88c7ff;
      display: flex;
      align-items: center;
      padding: 5px 20px 5px 20px;
      &--icon {
        cursor: pointer;
        margin-right: 15px;
      }
      &--reset {
        height: 100%;
        background-color: rgba(255, 255, 255, 0.5);
        border: none;
        cursor: initial;
        &-icon {
          position: absolute;
          right: 20px;
          cursor: pointer;
        }
        &:disabled {
          display: inline-block;
          background: none;
          border: none;
          color: black;
          font-weight: 600;
          .hide {
            display: none;
          }
        }
      }
    }
    &--container {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      margin-left: 20px;
      margin-right: 20px;

      h4 {
        margin-top: 2.5rem;
        margin-bottom: 0;
        font-size: 18px;
      }

      .hidden {
        display: none !important;
      }

      .filter-add-button {
        background-color: #71bcff;
        border-radius: 28px;
        color: white;
        padding: 5px;
        transition: all 0.5s ease-in-out;
        min-height: 23px;
        min-width: 23px;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.15);
        cursor: pointer;
      }
    }
  }

  .menu {
    display: flex;
    width: calc(100% - 20px);
    padding: 10px 10px 0;
    font-weight: 700;
    z-index: 100;
    background: $key-color;
    align-items: flex-start;

    .menu-item {
      height: 17px;
      margin-right: 1px;
      padding: 8px 13px;
      border-radius: 8px 8px 0 0;
      background: rgba(255, 255, 255, 0.5);
      font-size: 14px;
      text-decoration: none;
      white-space: nowrap;
      color: black;
      &.selected {
        background: white;
      }
    }
  }
  .route-container {
    max-height: $content-height;
    overflow: auto;
  }
  button {
    cursor: pointer;
    &:disabled {
      display: none;
    }
    &.reset {
      display: block;
      position: fixed;
      top: 0;
      right: 10px;
      padding: 5px;
      border-radius: 0 0 8px 8px;
      background: rgba(255, 255, 255, 0.5);
      border: none;
      font-size: 12px;
      color: black;
      .filter-icon {
        margin-left: 10px;
        margin-right: 5px;
      }
      .highlight {
        font-weight: bold;
      }
      &:disabled {
        cursor: auto;
        .hide {
          visibility: hidden;
        }
      }
    }
  }
}

//------------------summary------------------
#summary {
  padding-top: 10px;
  text-align: center;

  #benchmark_setup {
    width: 100%;

    .fixedRowTitle {
      text-align: left;
      display: flex;
      align-items: center;
      padding-left: 8px;
    }

    .stickCheckbox {
      position: sticky;
      top: 0;
      left: 0;
      width: max-content;
    }

    table {
      border-collapse: collapse;
      width: 100%;

      td,
      th {
        border: 1px solid #ddd;
        padding: 8px;
      }

      .options {
        ul {
          margin: 0;
          padding: 0 0 0 17px;
        }

        li {
          text-align: left;
          font-size: 9pt;
          list-style: none;
        }
      }

      .benchmark,
      th {
        font-weight: bold;
      }

      th {
        background-color: white;

        &.sticky {
          position: sticky !important;
          left: 0;
          z-index: 11;
        }
      }

      tr:nth-child(even) {
        background-color: mix($hover-color, white, 33%);
        th {
          background-color: mix($hover-color, white, 33%);
        }
      }

      tr:hover {
        background-color: mix($hover-color, white, 50%);
      }

      th {
        padding-top: 8px;
        padding-bottom: 8px;
        text-align: left;
        width: 14vw;
      }
    }
  }

  #statistics {
    border: 0;
    padding: 0;
    height: 100%;
    width: 100%;

    #statistics-placeholder {
      border-top: 1px solid #adadad;
      border-bottom: 1px solid #adadad;
      background-color: #f7f7f7;
    }

    #statistics-table > .table {
      .table-content {
        .td {
          padding: 8px 5px;
        }

        .table-header {
          .tr {
            &:nth-of-type(2) {
              box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.15);
              position: relative;
              z-index: 10;
            }

            .th {
              padding: 5px;

              &:not(:first-of-type) {
                border-right: 1px solid rgba(0, 0, 0, 0.05);
              }

              &.outer {
                text-overflow: ellipsis;
              }

              .header-data {
                height: 100%;
              }

              .selectColumns {
                text-overflow: ellipsis;
                overflow: hidden;
                border: #555;
              }
            }
          }
        }

        .table-body {
          .td {
            .cell {
              text-align: right;
              padding: 0;
            }
          }

          .row-title {
            font-weight: 700;
            text-align: left;
            overflow: hidden;
            text-overflow: ellipsis;
          }

          .tr {
            border-bottom: 1px solid transparent;
          }
        }
      }
    }
  }

  p {
    margin-top: 15px;
  }
}

//------------------table------------------
.main-table {
  .table {
    // make full height with pagination at bottom
    display: flex;
    flex-direction: column;
    height: $content-height;

    a {
      text-decoration: none;
      display: block;

      &:hover {
        background-color: $hover-color;
      }

      &:focus {
        outline: 1px dotted red;
      }
    }

    .tr {
      .td:first-of-type,
      .th:first-of-type {
        border-right: 1px solid #ccc;
      }
    }

    .fixed-task-header {
      justify-content: space-around;
      width: 33%;
      margin: auto;

      input {
        width: 100%;
      }
    }

    .table-content {
      // Better have vertical scroll bar always visible (less jumping around)
      overflow-y: scroll;
      flex: auto 1;

      .td {
        border-right: 1px solid rgba(0, 0, 0, 0.02);

        &.reg-column {
          display: flex;
          align-items: center;
          justify-content: flex-end;

          a {
            width: 100%;
          }

          div {
            padding: 5px 3px;
          }
        }
      }

      .table-header {
        position: sticky;
        top: 0;
        z-index: 3;

        > .tr {
          &:first-of-type {
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            border-bottom-color: #f2f2f2;
          }
        }

        .shadow-container {
          box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.15);
          position: relative;
          z-index: 10;

          .th {
            &:not(:first-of-type) {
              border-right: 1px solid rgba(0, 0, 0, 0.05);
            }
          }
        }

        .tr.filter {
          border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }
      }

      .th.header {
        position: relative;

        &:last-child {
          overflow: hidden;
        }

        &.fixed-task,
        &.reg-column {
          font-weight: normal;
        }

        &:not(.separator):not(.filter) > * {
          padding: 5px;
          text-overflow: ellipsis;
          overflow: hidden;
        }

        .header-sort-container {
          height: calc(100% - 2 * 5px);

          &.sorted-asc {
            box-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6);
          }

          &.sorted-desc {
            box-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6);
          }
        }

        &.filter {
          padding: 5px;

          .filter-field {
            width: 100%;
            text-align: right;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background: #fff;
            padding: 5px 7px;
            font-size: inherit;
            border-radius: 3px;

            & * {
              // avoid right-aligned content of drop-down in Chromium
              text-align: left;
            }
          }
        }
      }

      .table-body {
        span {
          text-align: center;
        }

        .tr {
          border-bottom: 1px solid darken(white, 5%);

          &:hover {
            .td {
              background: darken(white, 5%);
            }
          }
        }

        .row_id:not(:nth-child(1)) {
          font-size: 9pt;
          border-left: 1px solid black;
          margin-left: 5px;
          padding-left: 5px;
          height: 100%;
          color: #484848;
        }

        .td {
          padding: 1px;
          text-align: right;

          > a {
            padding: 5px 3px;
            margin-left: 1ex;
          }
        }

        .row__name--cellLink {
          color: black;
        }
      }
    }

    .pagination {
      position: sticky;
      bottom: 0;
      z-index: 99;
      background: white;
      z-index: 1;
      display: flex;
      justify-content: space-between;
      align-items: stretch;
      align-items: center;
      flex-wrap: wrap;
      box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);
      border-top: 2px solid rgba(0, 0, 0, 0.1);
      padding: 3px;

      .pagination-container {
        display: flex;
        justify-content: space-around;
        align-items: center;
        height: 100%;

        &#pagination-previous,
        &#pagination-next {
          flex: 1 1;

          .pagination-element {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
          }
        }

        &#pagination-center {
          display: flex;
          flex: 1.5 1;
          justify-content: space-around;
          flex-direction: row;
          flex-wrap: wrap;

          input,
          select {
            border: 1px solid rgba(0, 0, 0, 0.1);
            background: #fff;
          }

          .pagination-element {
            margin: 3px 10px;
          }
        }

        .pagination-element {
          text-align: center;
          border-radius: 3px;

          &.button {
            color: rgba(0, 0, 0, 0.6);
            background: rgba(0, 0, 0, 0.1);
            border-radius: 3px;
            transition: all 0.1s ease;
            cursor: pointer;
            outline-width: 0;

            &.disabled {
              cursor: default;
              opacity: 0.5;
            }

            &:not(.disabled):hover {
              background: rgba(0, 0, 0, 0.3);
              color: white;
            }
          }

          &#goto-page-element {
            white-space: nowrap;

            input {
              width: 55px;
              margin: 0 5px;
              padding: 5px 7px;
              text-align: center;
              font-size: inherit;
              border-radius: 3px;
            }
          }

          &#set-page-element {
            select {
              font-size: inherit;
              padding: 5px 7px;

              border-radius: 3px;
            }
          }
        }
      }
    }
  }

  .aborted {
    text-align: center;
  }
  .aborted:after {
    content: "—";
  }
  input::placeholder {
    color: lightgray;
  }
}

//------------------plot------------------
$plot-select-button-height: 25px;

.quantilePlot {
  margin: 20px;

  .rv-discrete-color-legend {
    width: max-content;
    max-width: 50vw;
  }

  .rv-discrete-color-legend-item.clickable {
    padding: 3px 10px;
    white-space: normal;

    &:hover {
      background: $hover-color;
    }
  }

  .settings-legend-container {
    justify-content: space-between;
  }

  .settings-container {
    flex-grow: 0;
    // Necessary due to propagation for flex-shrinking property
    min-width: 0;
  }

  .settings-border-container,
  .settings-subcontainer {
    justify-content: left;
    // Necessary due to propagation for flex-shrinking property
    min-width: 0;
  }

  /* Container of Selection dropdown of Quantile Plot
     The container tries to take up to 50% of the container width, but at least the width of its content. If it is forced to take less,
     the subcontainers will be wrapped into multiple rows. */
  .settings-subcontainer.flexible-width {
    flex: 1 1 50%;
  }

  /* Selection of Quantile Plot whose content is dependent on user input.
     The setting tries to take up to 60% of the container width, while excessing content will be shrinked in the dropdown preview. */
  .setting.flexible-width {
    flex: 1 0 60%;
    max-width: max-content;
    // Necessary due to propagation for flex-shrinking property
    min-width: 0;

    // If the dropwdown of the selection is forced to take less than 120px, the dropdowns will be wrapped into multiple rows.
    .setting-select {
      min-width: 120px;
    }
  }
}

.scatterPlot {
  text-align: center;
  margin: 20px;

  &__select select {
    margin: 10px;
  }

  .middle-line .rv-xy-plot__axis__line {
    stroke: $key-color;
  }

  &__plot {
    margin: auto;
  }

  button {
    margin: 10px;
  }

  .settings-container {
    margin-right: 0;
  }

  /* Container of Y-Axis and X-Axis of Scatter Plot whose contents are dependent on user input.
     The container tries to take up to 40% of the view width, but at least it's content width. If it is forced to take less,
     the subcontainers will be wrapped into multiple rows. */
  .settings-subcontainer.flexible-width {
    flex: 1 1 40vw;
    max-width: max-content;
    // Necessary due to propagation for flex-shrinking property
    min-width: 0;

    /* Each settings tries to take up to 45% of the container width, but at least 250px and never more than the maximal content needs,
      while excessing content will be shrinked in the dropdown preview. */
    .setting {
      flex: 1 1 45%;
      min-width: 250px;
      max-width: max-content;

      .setting-select {
        min-width: 150px;
      }

      &.icon {
        min-width: 0;

        &:hover {
          cursor: pointer;
        }
      }
    }
  }
}

.settings-legend-container {
  display: flex;
}

.settings-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-grow: 1;
  margin-right: 1em;
}

.settings-border-container {
  display: inline-flex;
  flex-wrap: wrap;
  justify-content: center;
  border: 1px solid rgba(0, 0, 0, 0.3);
  padding: 0.5em;
  max-width: 100%;
}

.settings-subcontainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.setting {
  display: flex;
  align-items: center;

  &-label {
    padding: 0.4em 1em;
    white-space: nowrap;

    &.with-tooltip {
      text-decoration: underline;

      &:hover {
        cursor: help;
      }
    }
  }

  &-select {
    margin: 0.4em 1em;
    margin-left: 0;
    border: 1px solid #c3c3c3;
    height: $plot-select-button-height;
    padding-left: 10px;
    border-radius: 3px;
    cursor: pointer;
  }

  &-button {
    height: $plot-select-button-height;
    margin: 0.4em 1em;
  }

  &.disabled,
  .disabled {
    color: rgba(0, 0, 0, 0.4);

    .setting-select {
      cursor: not-allowed;
    }
  }
}

.rv-discrete-color-legend {
  border: 1px solid rgba(0, 0, 0, 0.3);

  &-item.clickable {
    white-space: nowrap;
  }
}

.plot {
  &__noresults {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.info {
  margin: 40px;

  &-header {
    margin: 40px 0;
    display: flex;
    justify-content: space-between;
    h1 {
      margin: 0;
    }
    span {
      font-size: 9pt;
      border: 1px solid $key-color;
      padding: 5px;
    }
  }
}

.ReactModal__Body--open {
  // stop body from scrolling while overlay is open
  overflow: hidden;
  // avoid Ctrl+A select parts of the main UI while overlay is open
  user-select: none;
}
.ReactModal__Overlay {
  z-index: 900;
}
.overlay {
  position: fixed;
  overflow: scroll;
  top: 80px;
  right: 20px;
  left: 20px;
  bottom: 40px;
  background: white;
  border: 5px solid grey;
  border-radius: 5px;
  user-select: text;

  h1 {
    margin-bottom: 40px;
  }
  th,
  td {
    cursor: pointer;
    text-align: center;
    label {
      cursor: pointer;
    }
    background: white;
    // color: #ab0202;
    color: #8e8d8d;
    &.checked {
      color: black;
    }
  }
  th:first-child {
    background: white;
  }
  td:first-child {
    width: 30%;
    text-align: left;
  }
  input {
    display: none;
  }

  &__buttons {
    width: 100%;
    display: flex;
    justify-content: center;
    .btn {
      margin-top: 50px;
      width: 20vw;
    }
  }

  th {
    border-bottom: 1px solid black;
  }

  .closing {
    cursor: pointer;
    font-size: 120%;
    border-radius: 4px;

    &:hover {
      color: white;
      background: black;
    }
  }

  &.second-level {
    .link-overlay-header-container {
      background-color: white;
    }

    .link-overlay-text {
      margin-top: 0;
    }
  }

  .link-overlay {
    &-file-link {
      color: blue;
      text-decoration: underline;
      background-color: inherit;
      border: none;
      font: inherit;

      &:hover {
        cursor: pointer;
      }
    }

    &-header-container {
      display: flex;
      justify-content: space-between;
      flex-direction: row-reverse;
      position: sticky;
      top: 0;
      left: 0;
      height: 30px;
      padding: 10px 10px 0;

      // This container must not receive pointer events, otherwise reaching
      // through to link-overlay-text does not work. But all UI elements
      // in it need to be clickable.
      pointer-events: none;
      & > * {
        pointer-events: auto;
      }
    }

    &-back {
      &-button:hover {
        cursor: pointer;
      }

      &-icon {
        margin-right: 1em;
      }
    }

    &-text {
      // height of .link-overlay-header-container
      margin-top: -30px;
      padding: 0px 10px 10px 10px;
    }
  }
}

.rt-td {
  text-align: left;
}
.ReactTable {
  border: none !important;
}

/* https://www.w3schools.com/howto/howto_css_tooltip.asp */
/* Tooltip container */
.tooltip {
  position: relative;
  z-index: 10;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: #555;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;

  /* Position the tooltip text */
  position: absolute;
  z-index: 999999;
  width: 120px;
  top: 100%;
  left: 50%;
  margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */

  /* Fade in tooltip */
  opacity: 0;
  transition: opacity 0.3s;
}

/* Tooltip arrow */
.tooltip .tooltiptext::after {
  content: " ";
  position: absolute;
  bottom: 100%; /* At the top of the tooltip */
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent black transparent;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

@media only screen and (max-width: 700px) {
  .quantilePlot {
    .settings-legend-container {
      flex-wrap: wrap;
      justify-content: center;
    }

    .settings-subcontainer,
    .setting,
    .setting-select {
      flex-grow: 1;
    }

    .setting.flexible-width {
      min-width: 18em;
      max-width: 90vw;
    }

    .setting.flexible-width .setting-select {
      max-width: 75vw;
    }

    .settings-container {
      margin-right: 0;
    }

    .rv-discrete-color-legend {
      margin: 1em 0;
    }

    .rv-discrete-color-legend {
      max-width: 95vw;
    }
  }
}
